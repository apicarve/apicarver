---
swagger: "2.0"
info:
  description: Api Documentation
  version: "1.0"
  title: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
host: localhost:8080
basePath: /
tags:
- name: auth-controller
  description: Auth Controller
- name: basic-error-controller
  description: Basic Error Controller
- name: doctor-controller
  description: Doctor Controller
- name: forum-controller
  description: Forum Controller
- name: patient-controller
  description: Patient Controller
paths:
  /doctor:
    post:
      tags:
      - doctor-controller
      summary: postDoctorResponse
      operationId: postDoctorResponseUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: docResp
        description: docResp
        required: true
        schema:
          $ref: '#/definitions/DocResponse'
      deprecated: false
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /doctor/{doctorId}:
    get:
      tags:
      - doctor-controller
      summary: getPatientRequestsById
      operationId: getPatientRequestsByIdUsingGET
      produces:
      - '*/*'
      parameters:
      - name: doctorId
        in: path
        description: doctorId
        required: true
        type: integer
        format: int32
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RequestTable'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /doctors:
    get:
      tags:
      - auth-controller
      summary: getDoctors
      operationId: getDoctorsUsingGET
      produces:
      - '*/*'
      parameters: []
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Doctor'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /doctors/{doctorId}/{status}/{email}:
    post:
      tags:
      - auth-controller
      summary: updateDoctor
      operationId: updateDoctorUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: doctorId
        in: path
        description: doctorId
        required: true
        type: integer
        format: int32
      - name: email
        in: path
        description: email
        required: true
        type: string
      - name: status
        in: path
        description: status
        required: true
        type: string
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            type: integer
            format: int32
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /error:
    get:
      tags:
      - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingGET
      produces:
      - text/html
      parameters: []
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    head:
      tags:
      - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingHEAD
      consumes:
      - application/json
      produces:
      - text/html
      parameters: []
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    post:
      tags:
      - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPOST
      consumes:
      - application/json
      produces:
      - text/html
      parameters: []
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    put:
      tags:
      - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPUT
      consumes:
      - application/json
      produces:
      - text/html
      parameters: []
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      tags:
      - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingDELETE
      produces:
      - text/html
      parameters: []
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    options:
      tags:
      - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingOPTIONS
      consumes:
      - application/json
      produces:
      - text/html
      parameters: []
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    patch:
      tags:
      - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPATCH
      consumes:
      - application/json
      produces:
      - text/html
      parameters: []
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /forum:
    get:
      tags:
      - forum-controller
      summary: getForums
      operationId: getForumsUsingGET
      produces:
      - '*/*'
      parameters: []
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Forum'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      tags:
      - forum-controller
      summary: postForum
      operationId: postForumUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: forum
        description: forum
        required: true
        schema:
          $ref: '#/definitions/Forum'
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Forum'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /forum/{forumId}:
    get:
      tags:
      - forum-controller
      summary: getForumsById
      operationId: getForumsByIdUsingGET
      produces:
      - '*/*'
      parameters:
      - name: forumId
        in: path
        description: forumId
        required: true
        type: integer
        format: int32
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Forum'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /loginAdmin:
    post:
      tags:
      - auth-controller
      summary: loginAdmin
      operationId: loginAdminUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: user
        description: user
        required: true
        schema:
          $ref: '#/definitions/User'
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Admin'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /loginDoctor:
    post:
      tags:
      - auth-controller
      summary: loginDoctor
      operationId: loginDoctorUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: user
        description: user
        required: true
        schema:
          $ref: '#/definitions/User'
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Doctor'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /loginPatient:
    post:
      tags:
      - auth-controller
      summary: loginPatient
      operationId: loginPatientUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: user
        description: user
        required: true
        schema:
          $ref: '#/definitions/User'
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Patient'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /message:
    get:
      tags:
      - forum-controller
      summary: getMessages
      operationId: getMessagesUsingGET
      produces:
      - '*/*'
      parameters: []
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Message'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      tags:
      - forum-controller
      summary: postMessage
      operationId: postMessageUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: message
        description: message
        required: true
        schema:
          $ref: '#/definitions/Message'
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Message'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /message/{forumId}:
    get:
      tags:
      - forum-controller
      summary: getMessagesByForumId
      operationId: getMessagesByForumIdUsingGET
      produces:
      - '*/*'
      parameters:
      - name: forumId
        in: path
        description: forumId
        required: true
        type: integer
        format: int32
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Message'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /patient/req:
    post:
      tags:
      - patient-controller
      summary: postPatientRequests
      operationId: postPatientRequestsUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '#/definitions/Request'
      deprecated: false
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /patient/{patientId}:
    get:
      tags:
      - patient-controller
      summary: getPatientRequestsById
      operationId: getPatientRequestsByIdUsingGET_1
      produces:
      - '*/*'
      parameters:
      - name: patientId
        in: path
        description: patientId
        required: true
        type: integer
        format: int32
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RequestTable'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /patients:
    get:
      tags:
      - auth-controller
      summary: getPatients
      operationId: getPatientsUsingGET
      produces:
      - '*/*'
      parameters: []
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Patient'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /pendingRequest/{doctorId}:
    get:
      tags:
      - doctor-controller
      summary: getPendingRequestsById
      operationId: getPendingRequestsByIdUsingGET
      produces:
      - '*/*'
      parameters:
      - name: doctorId
        in: path
        description: doctorId
        required: true
        type: integer
        format: int32
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RequestTable'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /registerAdmin:
    post:
      tags:
      - auth-controller
      summary: registerAdmin
      operationId: registerAdminUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: admin
        description: admin
        required: true
        schema:
          $ref: '#/definitions/Admin'
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Admin'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /registerDoctor:
    post:
      tags:
      - auth-controller
      summary: registerDoctor
      operationId: registerDoctorUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: doctor
        description: doctor
        required: true
        schema:
          $ref: '#/definitions/Doctor'
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Doctor'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /registerPatient:
    post:
      tags:
      - auth-controller
      summary: registerPatient
      operationId: registerPatientUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: patient
        description: patient
        required: true
        schema:
          $ref: '#/definitions/Patient'
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Patient'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /resolvedRequest/{doctorId}:
    get:
      tags:
      - doctor-controller
      summary: getResolvedRequestsById
      operationId: getResolvedRequestsByIdUsingGET
      produces:
      - '*/*'
      parameters:
      - name: doctorId
        in: path
        description: doctorId
        required: true
        type: integer
        format: int32
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RequestTable'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
definitions:
  Admin:
    type: object
    properties:
      adminId:
        type: integer
        format: int32
      password:
        type: string
      role:
        type: string
      username:
        type: string
    title: Admin
  DocResponse:
    type: object
    properties:
      doctorId:
        type: integer
        format: int32
      doctorresponse:
        type: string
      hasappointment:
        type: boolean
      patientId:
        type: integer
        format: int32
      prescription:
        type: string
      problem:
        type: string
      requestId:
        type: integer
        format: int32
    title: DocResponse
  Doctor:
    type: object
    properties:
      address:
        type: string
      age:
        type: integer
        format: int32
      awards:
        type: string
      certification:
        type: string
      doctorId:
        type: integer
        format: int32
      education:
        type: string
      email:
        type: string
      firstname:
        type: string
      gender:
        type: string
      language:
        type: string
      lastname:
        type: string
      password:
        type: string
      phone:
        type: string
      role:
        type: string
      speciality:
        type: string
      status:
        type: string
      username:
        type: string
    title: Doctor
  Forum:
    type: object
    properties:
      forumId:
        type: integer
        format: int32
      role:
        type: string
      timeStamp:
        type: string
        format: date-time
      topic:
        type: string
      username:
        type: string
    title: Forum
  Message:
    type: object
    properties:
      docType:
        type: string
      doctorId:
        $ref: '#/definitions/Doctor'
      forumId:
        $ref: '#/definitions/Forum'
      fromusername:
        type: string
      message:
        type: string
      messageId:
        type: integer
        format: int32
      patientId:
        $ref: '#/definitions/Patient'
      timeStamp:
        type: string
        format: date-time
    title: Message
  ModelAndView:
    type: object
    properties:
      empty:
        type: boolean
      model:
        type: object
        properties: {}
      modelMap:
        type: object
        additionalProperties:
          type: object
          properties: {}
      reference:
        type: boolean
      status:
        type: string
        enum:
        - 100 CONTINUE
        - 101 SWITCHING_PROTOCOLS
        - 102 PROCESSING
        - 103 CHECKPOINT
        - 200 OK
        - 201 CREATED
        - 202 ACCEPTED
        - 203 NON_AUTHORITATIVE_INFORMATION
        - 204 NO_CONTENT
        - 205 RESET_CONTENT
        - 206 PARTIAL_CONTENT
        - 207 MULTI_STATUS
        - 208 ALREADY_REPORTED
        - 226 IM_USED
        - 300 MULTIPLE_CHOICES
        - 301 MOVED_PERMANENTLY
        - 302 FOUND
        - 302 MOVED_TEMPORARILY
        - 303 SEE_OTHER
        - 304 NOT_MODIFIED
        - 305 USE_PROXY
        - 307 TEMPORARY_REDIRECT
        - 308 PERMANENT_REDIRECT
        - 400 BAD_REQUEST
        - 401 UNAUTHORIZED
        - 402 PAYMENT_REQUIRED
        - 403 FORBIDDEN
        - 404 NOT_FOUND
        - 405 METHOD_NOT_ALLOWED
        - 406 NOT_ACCEPTABLE
        - 407 PROXY_AUTHENTICATION_REQUIRED
        - 408 REQUEST_TIMEOUT
        - 409 CONFLICT
        - 410 GONE
        - 411 LENGTH_REQUIRED
        - 412 PRECONDITION_FAILED
        - 413 PAYLOAD_TOO_LARGE
        - 413 REQUEST_ENTITY_TOO_LARGE
        - 414 URI_TOO_LONG
        - 414 REQUEST_URI_TOO_LONG
        - 415 UNSUPPORTED_MEDIA_TYPE
        - 416 REQUESTED_RANGE_NOT_SATISFIABLE
        - 417 EXPECTATION_FAILED
        - 418 I_AM_A_TEAPOT
        - 419 INSUFFICIENT_SPACE_ON_RESOURCE
        - 420 METHOD_FAILURE
        - 421 DESTINATION_LOCKED
        - 422 UNPROCESSABLE_ENTITY
        - 423 LOCKED
        - 424 FAILED_DEPENDENCY
        - 425 TOO_EARLY
        - 426 UPGRADE_REQUIRED
        - 428 PRECONDITION_REQUIRED
        - 429 TOO_MANY_REQUESTS
        - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
        - 451 UNAVAILABLE_FOR_LEGAL_REASONS
        - 500 INTERNAL_SERVER_ERROR
        - 501 NOT_IMPLEMENTED
        - 502 BAD_GATEWAY
        - 503 SERVICE_UNAVAILABLE
        - 504 GATEWAY_TIMEOUT
        - 505 HTTP_VERSION_NOT_SUPPORTED
        - 506 VARIANT_ALSO_NEGOTIATES
        - 507 INSUFFICIENT_STORAGE
        - 508 LOOP_DETECTED
        - 509 BANDWIDTH_LIMIT_EXCEEDED
        - 510 NOT_EXTENDED
        - 511 NETWORK_AUTHENTICATION_REQUIRED
      view:
        $ref: '#/definitions/View'
      viewName:
        type: string
    title: ModelAndView
  Patient:
    type: object
    properties:
      address:
        type: string
      age:
        type: integer
        format: int32
      email:
        type: string
      firstname:
        type: string
      gender:
        type: string
      healthcardnumber:
        type: string
      language:
        type: string
      lastname:
        type: string
      password:
        type: string
      patientId:
        type: integer
        format: int32
      phone:
        type: string
      role:
        type: string
      username:
        type: string
    title: Patient
  Request:
    type: object
    properties:
      doctorId:
        type: integer
        format: int32
      patientId:
        type: integer
        format: int32
      problem:
        type: string
    title: Request
  RequestTable:
    type: object
    properties:
      doctorId:
        $ref: '#/definitions/Doctor'
      doctorresponse:
        type: string
      hasappointment:
        type: boolean
      patientId:
        $ref: '#/definitions/Patient'
      prescription:
        type: string
      problem:
        type: string
      requestId:
        type: integer
        format: int32
      responsed:
        type: boolean
      timeStamp:
        type: string
        format: date-time
      timeresponded:
        type: string
        format: date-time
    title: RequestTable
  User:
    type: object
    properties:
      password:
        type: string
      username:
        type: string
    title: User
  View:
    type: object
    properties:
      contentType:
        type: string
    title: View
