{
  "swagger": "2.0",
  "info": {
    "description": "This API provides access to various ParaBank internal operations",
    "version": "3.0.0",
    "title": "The ParaBank REST API",
    "termsOfService": "/parabank/about.htm",
    "contact": {
      "name": "ParaBank Web Administrator",
      "url": "http://www.parasoft.com",
      "email": "webadmin@parabank.parasoft.com"
    },
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:8080",
  "basePath": "/parabank-3.0.0-SNAPSHOT/services_proxy/bank",
  "tags": [
    {
      "name": "Accounts",
      "description": "account centric operations"
    },
    {
      "name": "Customers",
      "description": "customer centric operations"
    },
    {
      "name": "Database",
      "description": "data management operations"
    },
    {
      "name": "JMS",
      "description": "message service operations"
    },
    {
      "name": "Loans",
      "description": "request loan operations"
    },
    {
      "name": "Misc",
      "description": "miscelaneous operations"
    },
    {
      "name": "Positions",
      "description": "stock centric operations"
    },
    {
      "name": "Transactions",
      "description": "banking transactions centric operations"
    }
  ],
  "schemes": [
    "http"
  ],
  "produces": [
    "application/xml",
    "application/json"
  ],
  "paths": {
    "/setParameter/{name}/{value}": {
      "post": {
        "tags": [
          "Misc"
        ],
        "summary": "Set Parameters",
        "description": "",
        "operationId": "setParameter_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Parameter Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "value",
            "in": "path",
            "description": "Parameter Value",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/transfer": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Transfer funds",
        "description": "",
        "operationId": "transfer_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "fromAccountId",
            "in": "query",
            "description": "Customer funds source account",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "toAccountId",
            "in": "query",
            "description": "Customer funds target account",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Amount",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/positions/{positionId}": {
      "get": {
        "tags": [
          "Positions"
        ],
        "summary": "Get Position by id",
        "description": "",
        "operationId": "getPosition_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "positionId",
            "in": "path",
            "description": "Unique identifier for the position",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Position"
            }
          }
        }
      }
    },
    "/transactions/{transactionId}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get the transaction for the id",
        "description": "",
        "operationId": "getTransaction_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "Unique identifier for the transaction",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        }
      }
    },
    "/login/{username}/{password}": {
      "get": {
        "tags": [
          "Misc"
        ],
        "summary": "Login (john/demo)",
        "description": "",
        "operationId": "login_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Customer's user name",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "path",
            "description": "Customer's password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        }
      }
    },
    "/accounts/{accountId}/transactions": {
      "get": {
        "tags": [
          "Accounts",
          "Transactions"
        ],
        "summary": "Get the list of Transactions for the account",
        "description": "",
        "operationId": "getTransactions_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transaction"
              }
            }
          }
        }
      }
    },
    "/requestLoan": {
      "post": {
        "tags": [
          "Loans"
        ],
        "summary": "Request a loan",
        "description": "",
        "operationId": "requestLoan_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "Customer's id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Amount",
            "required": true,
            "type": "number"
          },
          {
            "name": "downPayment",
            "in": "query",
            "description": "Downpayment for the loan",
            "required": true,
            "type": "number"
          },
          {
            "name": "fromAccountId",
            "in": "query",
            "description": "Customer funds source account",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LoanResponse"
            }
          }
        }
      }
    },
    "/createAccount": {
      "post": {
        "tags": [
          "Customers",
          "Accounts"
        ],
        "summary": "Create a new account",
        "description": "",
        "operationId": "createAccount_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "Customer's id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "newAccountType",
            "in": "query",
            "description": "Account type (CHECKING, SAVINGS, LOAN)",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fromAccountId",
            "in": "query",
            "description": "Customer funds source account",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        }
      }
    },
    "/deposit": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Deposit funds",
        "description": "",
        "operationId": "deposit_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "Customer funds target account",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Amount",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/accounts/{accountId}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get Account by Id",
        "description": "",
        "operationId": "getAccount_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        }
      }
    },
    "/customers/{customerId}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get Customer Details",
        "description": "",
        "operationId": "getCustomer_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer's id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        }
      }
    },
    "/positions/{positionId}/{startDate}/{endDate}": {
      "get": {
        "tags": [
          "Positions"
        ],
        "summary": "Get Position history by id within a date range",
        "description": "",
        "operationId": "getPositionHistory_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "positionId",
            "in": "path",
            "description": "Unique identifier for the position",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "startDate",
            "in": "path",
            "description": "Search starting date",
            "required": true,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "path",
            "description": "Search ending date",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HistoryPoint"
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/sellPosition": {
      "post": {
        "tags": [
          "Positions"
        ],
        "summary": "Sell a Position",
        "description": "",
        "operationId": "sellPosition_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer's id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "accountId",
            "in": "query",
            "description": "Customer funds target account",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "positionId",
            "in": "query",
            "description": "Unique identifier for the position",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "shares",
            "in": "query",
            "description": "number of shares",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pricePerShare",
            "in": "query",
            "description": "Price of each share",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Position"
              }
            }
          }
        }
      }
    },
    "/customers/update/{customerId}": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Update customer information",
        "description": "",
        "operationId": "updateCustomer_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer's id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "Customer's given (first) name",
            "required": true,
            "type": "string"
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "Customer's surname (last name)",
            "required": true,
            "type": "string"
          },
          {
            "name": "street",
            "in": "query",
            "description": "Street Address including bilding number and apartment (if any)",
            "required": true,
            "type": "string"
          },
          {
            "name": "city",
            "in": "query",
            "description": "City",
            "required": true,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "description": "US state or Region name",
            "required": true,
            "type": "string"
          },
          {
            "name": "zipCode",
            "in": "query",
            "description": "ZIP code or province id",
            "required": true,
            "type": "string"
          },
          {
            "name": "phoneNumber",
            "in": "query",
            "description": "Contact Phone Number",
            "required": true,
            "type": "string"
          },
          {
            "name": "ssn",
            "in": "query",
            "description": "Social Security Number",
            "required": true,
            "type": "string"
          },
          {
            "name": "username",
            "in": "query",
            "description": "Customer's user name",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "Customer's password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/withdraw": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Withdraw funds",
        "description": "",
        "operationId": "withdraw_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "Customer funds source account",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Amount",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/cleanDB": {
      "post": {
        "tags": [
          "Database"
        ],
        "summary": "Clean the Database",
        "description": "",
        "operationId": "cleanDB_1",
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/initializeDB": {
      "post": {
        "tags": [
          "Database"
        ],
        "summary": "Initialize the Database",
        "description": "",
        "operationId": "initializeDB_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/customers/{customerId}/buyPosition": {
      "post": {
        "tags": [
          "Positions"
        ],
        "summary": "Buy a Position",
        "description": "",
        "operationId": "buyPosition_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer's id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "accountId",
            "in": "query",
            "description": "Customer funds source account",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Instrument's Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Instrument's exchange symbol",
            "required": true,
            "type": "string"
          },
          {
            "name": "shares",
            "in": "query",
            "description": "number of shares",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pricePerShare",
            "in": "query",
            "description": "Price of each share",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Position"
              }
            }
          }
        }
      }
    },
    "/shutdownJmsListener": {
      "post": {
        "tags": [
          "JMS"
        ],
        "summary": "Stop JMS Listener",
        "description": "",
        "operationId": "shutdownJmsListener_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/startupJmsListener": {
      "post": {
        "tags": [
          "JMS"
        ],
        "summary": "Start JMS Listener",
        "description": "",
        "operationId": "startupJmsListener_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/accounts/{accountId}/transactions/amount/{amount}": {
      "get": {
        "tags": [
          "Accounts",
          "Transactions"
        ],
        "summary": "Create transactions by amount for account",
        "description": "",
        "operationId": "getTransactionsByAmount_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "amount",
            "in": "path",
            "description": "Amount",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transaction"
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/transactions/month/{month}/type/{type}": {
      "get": {
        "tags": [
          "Accounts",
          "Transactions"
        ],
        "summary": "Fetch transactions by month and type for account",
        "description": "",
        "operationId": "getTransactionsByMonthAndType_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month to use for the search range",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "path",
            "description": "Transaction type (CREDIT, DEBIT)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transaction"
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/transactions/fromDate/{fromDate}/toDate/{toDate}": {
      "get": {
        "tags": [
          "Accounts",
          "Transactions"
        ],
        "summary": "Fetch transactions for date range for account",
        "description": "",
        "operationId": "getTransactionsByToFromDate_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fromDate",
            "in": "path",
            "description": "Search starting date",
            "required": true,
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "path",
            "description": "Search ending date",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transaction"
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/transactions/onDate/{onDate}": {
      "get": {
        "tags": [
          "Accounts",
          "Transactions"
        ],
        "summary": "Fetch transactions for a specific date for account",
        "description": "",
        "operationId": "getTransactionsOnDate_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "onDate",
            "in": "path",
            "description": "Search specific date",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transaction"
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/positions": {
      "get": {
        "tags": [
          "Customers",
          "Positions"
        ],
        "summary": "Get Positions for Customer",
        "description": "",
        "operationId": "getPositions_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer's id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Position"
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/accounts": {
      "get": {
        "tags": [
          "Customers",
          "Accounts"
        ],
        "summary": "Get Customer Accounts",
        "description": "",
        "operationId": "getAccounts_1",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer's id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          }
        }
      }
    },
    "/billpay": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Pay bill",
        "description": "",
        "operationId": "billPay_1",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "Bill payment source account",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Amount",
            "required": true,
            "type": "number"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Payee",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Payee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BillPayResult"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Position": {
      "type": "object",
      "properties": {
        "positionId": {
          "type": "integer",
          "format": "int32"
        },
        "customerId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "symbol": {
          "type": "string"
        },
        "shares": {
          "type": "integer",
          "format": "int32"
        },
        "purchasePrice": {
          "type": "number"
        }
      },
      "xml": {
        "name": "position"
      }
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "accountId": {
          "type": "integer",
          "format": "int32"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "amount": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Credit",
            "Debit"
          ]
        }
      },
      "xml": {
        "name": "transaction"
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "street": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      }
    },
    "Customer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/Address"
        },
        "phoneNumber": {
          "type": "string"
        },
        "ssn": {
          "type": "string"
        }
      },
      "xml": {
        "name": "customer"
      }
    },
    "LoanResponse": {
      "type": "object",
      "required": [
        "loanProviderName"
      ],
      "properties": {
        "responseDate": {
          "type": "string",
          "format": "date-time"
        },
        "loanProviderName": {
          "type": "string"
        },
        "approved": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "accountId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "loanResponse",
        "namespace": "http://service.parabank.parasoft.com/"
      }
    },
    "Account": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "customerId": {
          "type": "integer",
          "format": "int32"
        },
        "balance": {
          "type": "number"
        },
        "type": {
          "type": "string",
          "enum": [
            "CHECKING",
            "SAVINGS",
            "LOAN"
          ]
        }
      },
      "xml": {
        "name": "account"
      }
    },
    "HistoryPoint": {
      "type": "object",
      "properties": {
        "symbol": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "closingPrice": {
          "type": "number"
        }
      },
      "xml": {
        "name": "historyPoint",
        "namespace": "http://service.parabank.parasoft.com/"
      }
    },
    "BillPayResult": {
      "type": "object",
      "properties": {
        "payeeName": {
          "type": "string"
        },
        "amount": {
          "type": "number"
        },
        "accountId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "billPayResult"
      }
    },
    "Payee": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/Address"
        },
        "phoneNumber": {
          "type": "string"
        },
        "accountNumber": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  }
}